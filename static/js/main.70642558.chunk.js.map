{"version":3,"sources":["TodoStyled.js","App.js","reportWebVitals.js","index.js"],"names":["Li","styled","li","InputCheckbox","input","InputText","InputSubmit","Button","button","Ul","ul","Main","main","Todos","React","useState","id","uuidv4","text","completed","todos","setTodos","css","currentDate","Date","month","toLocaleString","dayNumber","getUTCDate","dayName","weekday","showCurrentDate","CreateTodo","onCreate","todo","length","map","Todo","onToggleComplete","onRemove","filter","style","background","type","onChange","defaultChecked","textDecoration","onClick","setText","error","setError","onSubmit","event","preventDefault","placeholder","value","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70642558.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\n  list-style: none;\n  border-radius: 0.5rem;\n  padding: 1.3rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nexport const InputCheckbox = styled.input`\n  visibility: hidden;\n  margin: 0;\n  width: 20px;\n  height: 20px;\n  &:after {\n    content: \"\";\n    width: 20px;\n    height: 20px;\n    border: 1px solid #fff;\n    border-radius: 3px;\n    visibility: initial;\n    font-weight: 900;\n    font-family: \"Font Awesome 5 Free\";\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  &:checked {\n    &:after {\n      background: #df8c32;\n      border-color: #df8c32;\n      font-family: \"Font Awesome 5 Free\";\n      content: \"\\\\f00c\";\n      font-weight: 900;\n    }\n  }\n`;\n\nexport const InputText = styled.input`\n  width: 30%;\n  height: 2.5rem;\n  border: 0;\n  outline: 0;\n  border-radius: 0.3rem;\n  padding: 0 1rem;\n  font-size: 1rem;\n  &:focus {\n    background-color: #e7e7e7;\n  }\n  @media (max-width: 767.98px) {\n    width: calc(100% - 2rem);\n  }\n`;\n\nexport const InputSubmit = styled.input`\n  height: 2.5rem;\n  border: 0;\n  outline: 0;\n  border-radius: 0.3rem;\n  margin-left: 1.5rem;\n  background: #df8c32;\n  font-size: 1rem;\n  color: #fff;\n  cursor: pointer;\n  padding: 0 1rem;\n  @media (max-width: 767.98px) {\n    margin: 1rem auto 1rem auto;\n    display: block;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  background: none;\n  border: 0;\n  color: #fff;\n  font-size: 14px;\n  outline: 0;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Ul = styled.ul`\n  border-top: 1px solid #a8cceb;\n  margin-top: 3rem;\n  padding: 3rem 0 0 0;\n`;\n\nexport const Main = styled.main`\n  background: #60a1da;\n  width: 100vw;\n  max-width: 65rem;\n  min-height: 70vh;\n  border-radius: 1rem;\n  padding: 2rem;\n  color: #fff;\n`;\n","/* @jsxImportSource @emotion/react */ import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsx, css } from \"@emotion/react\";\nimport \"./styles.css\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport * as TodoStyled from \"./TodoStyled\";\n\nfunction Todos() {\n  const [todos, setTodos] = React.useState([\n    {\n      id: uuidv4(),\n      text: \"Creat a Todo app\",\n      completed: true,\n    },\n    {\n      id: uuidv4(),\n      text: \"Dinner with mum\",\n      completed: false,\n    },\n  ]);\n  //Complete a todo\n  const completeTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n  //Remove a todo\n  const removeTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  //Add a todo\n  const addTodo = (todo) => {\n    const id = uuidv4();\n    const newTodo = { id, text: todo, completed: false };\n    setTodos([newTodo, ...todos]);\n  };\n  //Show current date\n  const showCurrentDate = () => {\n    const currentDate = new Date();\n    const month = currentDate.toLocaleString(\"en-us\", { month: \"long\" });\n    const dayNumber = currentDate.getUTCDate();\n    const dayName = currentDate.toLocaleString(\"en-us\", { weekday: \"long\" });\n    return `${dayName}, ${dayNumber} ${month}`;\n  };\n  return (\n    <TodoStyled.Main>\n      <h1\n        css={css`\n          margin: 0;\n        `}\n      >\n        {showCurrentDate()}\n      </h1>\n      <CreateTodo onCreate={addTodo} />\n      <TodoStyled.Ul>\n        {todos.length > 0\n          ? todos.map((todo) => (\n              <Todo\n                key={todo.id}\n                id={todo.id}\n                text={todo.text}\n                completed={todo.completed}\n                onToggleComplete={() => completeTodo(todo.id)}\n                onRemove={() => removeTodo(todo.id)}\n              />\n            ))\n          : \"You have no tasks.\"}\n      </TodoStyled.Ul>\n    </TodoStyled.Main>\n  );\n}\n\nfunction Todo({ id, text, completed, onRemove, onToggleComplete }) {\n  return (\n    <TodoStyled.Li style={{ background: completed ? \"#5088B8\" : \"#0D2A43\" }}>\n      <TodoStyled.InputCheckbox\n        type=\"checkbox\"\n        onChange={onToggleComplete}\n        defaultChecked={completed ? \"checked\" : \"\"}\n      />\n      <div\n        style={{ textDecoration: completed ? \"line-through\" : \"\" }}\n        css={css`\n          margin: 0 1rem;\n        `}\n        id={id}\n      >\n        {text}\n      </div>\n      <TodoStyled.Button onClick={onRemove}>\n        <span\n          css={css`\n            margin-right: 0.5rem;\n          `}\n        >\n          Remove\n        </span>\n        <FaTrashAlt />\n      </TodoStyled.Button>\n    </TodoStyled.Li>\n  );\n}\n\nfunction CreateTodo({ onCreate }) {\n  //Input state\n  const [text, setText] = React.useState(\"\");\n  //Error state\n  const [error, setError] = React.useState(\"\");\n  //Verify\n  const onSubmitTodo = (event) => {\n    event.preventDefault();\n    if (!text) {\n      setError(\"You can't add empty todo. Please try again.\");\n      return;\n    }\n    onCreate(text);\n    setText(\"\");\n    setError(\"\");\n  };\n  return (\n    <form\n      onSubmit={onSubmitTodo}\n      css={css`\n        margin-top: 3rem;\n      `}\n    >\n      <TodoStyled.InputText\n        type=\"text\"\n        placeholder=\"Enter a task\"\n        value={text}\n        onChange={(event) => setText(event.target.value)}\n      />\n      <TodoStyled.InputSubmit type=\"submit\" value=\"Add task\" />\n      <p>{error}</p>\n    </form>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}